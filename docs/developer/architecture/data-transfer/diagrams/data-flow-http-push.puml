'
'  Copyright (c) 2021 SAP SE
'
'  This program and the accompanying materials are made available under the
'  terms of the Apache License, Version 2.0 which is available at
'  https://www.apache.org/licenses/LICENSE-2.0
'
'  SPDX-License-Identifier: Apache-2.0
'
'  Contributors:
'       SAP SE - Initial Draft
'
'

@startuml

skinParam NoteBackgroundColor WhiteSmoke
skinParam NoteFontColor Black
skinParam ParticipantBackgroundColor WhiteSmoke
skinParam ActorBackgroundColor WhiteSmoke
skinParam AgentBackgroundColor White
skinParam AgentBorderColor SkyBlue
skinparam shadowing false

!define ConsumerColor f8f2ff
!define ProviderColor d9edff
!define WarningColor Business
!define LeadColor Technology

autonumber

box Provider #ProviderColor
    database ProviderDB as "Data Source"
    participant DataFlowAgent #white
    participant ConnectorProvider as "Eclipse\nDataspace\nConnector" #white
end box

box Consumer #ConsumerColor
    participant ConnectorConsumer as "Eclipse\nDataspace\nConnector" #white
    participant HTTPService #white
end box

hnote over ProviderDB, HTTPService #Business
**Precondition**
IDS description/artifact request and contract agreement messages already exchanged
end note

ConnectorConsumer -> HTTPService ++ : createBasedOnContract(ContractAgreement)
return Auth token (e.g., API key) incl. expiry date

hnote over ConnectorConsumer, HTTPService #Business
Consumer stored contract id (or copy of contract) next to data.
end note

ConnectorConsumer -> ConnectorProvider : Provide endpoint+token via custom IDS Message

hnote over ConnectorConsumer, ConnectorProvider #Business
Endpoint is provided upfront. Changes announced using IDS Notification Message.
end note

ConnectorProvider -> DataFlowAgent ++ : schedule flow based on agreement, endpoint, token

alt Asset provided as batch
        DataFlowAgent -> ProviderDB ++ : fetchData
            return Data

else Asset provided based on event
    hnote over ProviderDB, DataFlowAgent #Business
        Data Source expected to support Pub/Sub
    end note
    DataFlowAgent -> ProviderDB : subscribe
    loop
        DataFlowAgent -> DataFlowAgent : wait for event
    end
    ProviderDB -> DataFlowAgent : newAssetEvent
end

    opt auth token expired
        DataFlowAgent -> HTTPService ++ : get new auth token
        return auth token
    end

DataFlowAgent -> HTTPService ++ : pushData
DataFlowAgent -> ConnectorProvider : confirmTransfer
opt Asset provided based on event
    loop
        DataFlowAgent -> DataFlowAgent : wait for next event
    end
end
deactivate DataFlowAgent

HTTPService -> ConnectorConsumer : confirmTransfer
deactivate HTTPService




hnote over ProviderDB, HTTPService #Business
Consumer Connector provides API to lookup contract
end note

@enduml